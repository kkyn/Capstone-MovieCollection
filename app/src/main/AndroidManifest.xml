<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="com.example.android.fnlprjct">

    <!-- This permission is necessary in order for 'this-Project/App' to perform network access. -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- Permissions required by the sync adapter -->
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS"/>
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS"/>
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS"/>

    <application
        android:name=".MyApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher_movie_roll_teal"
        android:label="@string/app_name"
        android:theme="@style/AppTheme"
        android:supportsRtl="true"
        >

        <!--This meta-data tag is required to use Google Play Services.-->
        <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version"/>

        <activity
            android:name=".MainActivity"
            android:label="@string/label_main_activity"> <!-- also refers to the label name of the start-icon -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <activity
            android:name=".DetailActivity"
            android:label="@string/label_detail_activity"
            android:parentActivityName=".MainActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".MainActivity"/>
        </activity>
        <activity
            android:name=".SettingsPreferenceActivity"
            android:label="Settings"
            android:parentActivityName=".MainActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".MainActivity"/>
        </activity>

        <!-- The SyncAdapter's dummy authentication service -->
        <service android:name=".sync.MAuthenticatorService">
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator"/>
            </intent-filter>

            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator"/>
        </service>

        <!-- The SyncAdapter service -->
        <service
            android:name=".sync.MSyncService"
            android:exported="true">

            <!-- android:process=":sync" -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter"/>
            </intent-filter>

            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter"/>
        </service>

        <!-- Step-3b -->
        <!-- NOTE: need to add this (android:exported="true") so widget
            can access the content provider located in this app -->
        <provider
            android:name=".data.MovieProvider"
            android:authorities="com.example.android.fnlprjct"
            android:syncable="true"
            android:exported="true"/>

        <!-- ///////////////////////////////////////////// -->
        <!-- BEGIN, For Collection Widget -->
        <!-- We'll need to add two entries to our manifest for our collection view widget -->

        <!-- 1. The broadcast receiver that refers to our widget. This needs the
                intent-filter android.appwidget.action.APPWIDGET_UPDATE and the
                meta-data for our XML widget configuration -->
        <!-- This specifies a new class ExampleAppWidgetProvider which will be
                responsible for receiving APPWIDGET_UPDATE intents.  -->
        <!-- Step (B) -->
        <!--  specifies the AppWidgetProvider used by the App Widget -->
        <receiver android:name=".widget.CollectionWidgetProvider"
                  android:label="@string/widget_name"
            > <!-- broadcast-receiver element -->

            <intent-filter>
                <!-- specifies that the AppWidgetProvider accepts the ACTION_APPWIDGET_UPDATE broadcast from
                 the AppWidgetManager-->
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/collection_widget_provider_info"/>
        </receiver>

        <!-- 2. The service that will send our collection data to our widget. It needs the
                                permission android.permission.BIND_REMOTEVIEWS -->
        <service android:name=".widget.WidgetService"
                 android:permission="android.permission.BIND_REMOTEVIEWS"/>
        <!-- END, For Collection Widget -->
        <!-- ///////////////////////////////////////////// -->

    </application>

</manifest>